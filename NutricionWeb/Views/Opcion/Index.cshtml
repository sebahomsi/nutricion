@using PagedList.Mvc;
@model PagedList.IPagedList<NutricionWeb.Models.Opcion.OpcionViewModel>

@{
    ViewBag.Title = "Receta";
}

<div class="titulo-ABM">
    <h4 class="detail-h4">Recetas</h4>
</div>

<div class="row">
    <div class="col-lg-6" align="left">
        <div class="btn-group">
            @Html.ActionLink("Nuevo", "Create", new { }, new { @class = "btn btn-primary-custom1" })
            @if (@ViewBag.Eliminado == false)
            {
                @Html.ActionLink("Ver Eliminados", "Index", new { eliminado = true }, new { @class = "btn btn-primary-custom" })

            }
            else
            {
                @Html.ActionLink("Ver Eliminados", "Index", new { eliminado = false }, new { @class = "btn btn-primary-custom" })

            }
            @Html.ActionLink("Que puedo comer?", "BuscarRecetasPorAlimentos", new { }, new { @class = "btn btn-primary-custom1" })
        </div>
    </div>
    <div class="col-lg-6" align="right">
        <div class="navbar-form navbar-right">
            @using (Html.BeginForm("Index", "Opcion", FormMethod.Get,new { @id="form-Buscar" }))
            {
                <form class="form-group-lg">

                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.Label("SubGrupo", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("idSub",ViewBag.Cmb as IEnumerable<SelectListItem>,"Ninguno",new {@class= "form-control" , @id="idSub" })                                    
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            @Html.TextBox("CadenaBuscar", ViewBag.FilterValue as string, new { placeholder = "Ingrese una cadena...", @class = "form-control", autocomplete = "off" })
                            <button type="submit" class="btn btn-default">Buscar</button>
                        </div>
                    </div>

                    

                </form>

            }
        </div>
    </div>
</div>
<div class="table-responsive">
    <table class="table">
        <tr class="cabecera-tabla">
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Descripcion)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.OrderBy(model => model.Descripcion))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td align="right">
                    @Html.ActionLink("Actualizar", "Edit", new { id = item.Id }, new { @class = "btn btn-warning" })
                    @Html.ActionLink("Detalles", "Details", new { id = item.Id }, new { @class = "btn btn-default" })
                    @if (item.Eliminado)
                    {
                        @Html.ActionLink("Activar", "Delete", new { id = item.Id }, new { @class = "btn btn-info" })

                    }
                    else
                    {
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })

                    }
                </td>
            </tr>
        }

    </table>
</div>

<div align="center">
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", "Opcion", new { page, cadenaBuscar = ViewBag.FilterValue}))
</div>

@section Scripts {

    <script>
        console.log("das");
        $(() => {

            $("#idSub").change(() => {
                $("#form-Buscar").submit();
            });

        });

    </script>
    
}