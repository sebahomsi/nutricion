@using PagedList.Mvc
@model PagedList.IPagedList<NutricionWeb.Models.Opcion.OpcionViewModel>


<div class="table-responsive">
    <table class="table">
        <tr class="cabecera-tabla">
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Descripcion)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>

                <td align="right">
                    <input type="button" id="@item.Id" desc="@item.Descripcion" name="seleccionar-opcion" class="btn btn-primary-custom btn-xs" value="Seleccionar" />
                </td>
            </tr>
        }

    </table>
    
    <button id="guardarOpciones" class="btn btn-success" >Guardar</button>
    <input id="ComidaId" type="hidden" value="@ViewBag.ComidaId" />

</div>

<div align="center">
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("BuscarOpcionModal", "ComidaDetalle", new { page, cadenaBuscar = ViewBag.FilterValue, comidaId = @ViewBag.ComidaId }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "partialFindAgregarComida" }))
</div>

<script type="text/javascript">
    $(() => {

        @*$("input[name=seleccionar-opcion]").click(e => {
            if (window.parent.seleccionarOpcion) {
                window.parent.seleccionarOpcion(e.target.id, $(e.target).attr("desc"), @ViewBag.ComidaId);
            }
        });*@

    });
</script>