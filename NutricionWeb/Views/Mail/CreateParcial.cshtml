@model NutricionWeb.Models.Mail.MailViewModel

<!--Modal -->
<div class="modal fade" id="modal-pacientes" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            @*Parte de arriba del modal*@
            <div class="modal-header">
                <div align="right">
                    <button type="button" class=" btn btn-danger" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <br>
                <div class="jumbotron titulo-ABM" style="margin-bottom:5px">
                    <h2>Seleccionar Paciente</h2>
                </div>
            </div>
            @*Cuerpo del modal*@
            <div class="modal-body">
                <div class="form" style="height:382px">
                    <div class="form-group navbar-right">
                        <div class="col-md-4" style="width: 310px">
                            <input type="text" class="form-control " id="txt-BuscarPaciente" placeholder="Ingrese una cadena...">
                        </div>
                        <div class="col-md-2" align="left">
                            <div id="btn-BuscarPaciente" class="btn btn-default ">Buscar</div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div id="partialFindPaciente"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" id="cancelar-paciente" class="btn btn-primary-custom" data-dismiss="modal" aria-hidden="true">Cancelar</button>
            </div>
        </div>
    </div>
</div>


<div class="col-md-12">

    @using (Html.BeginForm("CreateParcial", "Mail", FormMethod.Post, new { @id = "formEnviarMail", enctype = "multipart/form-data" }))
  
    {

    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.PacienteId)
    <div class="form-horizontal">

        <img src="~/Content/Imagenes/ajax-loader (3).gif" id="loading" hidden />
        <span id="mensaje"></span>
        <br />        
        <br />
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.MailDestino, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4" style="width: 310px">
                    @Html.EditorFor(model => model.MailDestino, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.MailDestino, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2" align="left">
                    <div id="btn-Paciente" class="btn btn-default" type="button" data-toggle="modal" data-target="#modal-pacientes" value="Modal BuscarPacientes" title="Seleccionar paciente">...</div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MailEmisor, htmlAttributes: new { @class = "control-label col-md-2", @readonly = "readonly" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MailEmisor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MailEmisor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contraseña, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contraseña, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Asunto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Asunto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Asunto, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CuerpoMensaje, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CuerpoMensaje, new { htmlAttributes = new { @class = "form-control", @rows = "10", @cols = "20" } })
                    @Html.ValidationMessageFor(model => model.CuerpoMensaje, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.IncluirHistoriaClinica, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-1">
                    @Html.EditorFor(model => model.IncluirHistoriaClinica, new { htmlAttributes = new { } })
                    @Html.ValidationMessageFor(model => model.IncluirHistoriaClinica, "", new { @class = "text-danger" })
                </div>
                @Html.LabelFor(model => model.IncluirPlan, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-1">
                    @Html.EditorFor(model => model.IncluirPlan, new { htmlAttributes = new { } })
                    @Html.ValidationMessageFor(model => model.IncluirPlan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">

            </div>




            <div class="form-group">
                @Html.Label("Archivos", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <span class="btn btn-primary btn-primary">
                        @Html.TextBoxFor(model => model.Imagenes, new { type = "file", @multiple = "multiple" })
                    </span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-4">
                    <input type="submit" id="enviar" value="Enviar" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
    }

    <div class="col-md-6">
        <h5 style="text-align: center">Archivos adjuntos</h5>
        <div id="imagen"></div>
    </div>

</div>

    @Scripts.Render("~/bundles/jqueryval")
    <script>

        var archivos = [];

        $(document).ajaxStart(function () {
            $("#loading").show();
            
        }).ajaxStop(function () {
            $("#loading").hide();
        });

        $("#btn-Paciente").click(function() {
                listaPaciente();
            }
        );

        $("#btn-BuscarPaciente").click(() => {
            listaPaciente();
        });

        function listaPaciente() {
            $("#partialFindPaciente").empty();

            $.get('@Html.Raw(Url.Action("BuscarPaciente", "DatoAntropometrico"))',
                {
                    cadenaBuscar: $("#txt-BuscarPaciente").val()
                },
                function(listaPaciente) {
                    $("#partialFindPaciente").append(listaPaciente);
                });
        }


        $(document).on("click",
            "#seleccionar-paciente",
            function() {

                const url = '@Html.Raw(Url.Action("TraerPaciente", "DatoAntropometrico"))';

                $.get(url,
                    { pacienteId: $(this).attr("name"), traerTurno: true },
                    function(json) {

                        $('#MailDestino').val(json.paciente.Mail);
                        $('#PacienteId').val(json.paciente.Id);
                        $('#cancelar-paciente').trigger("click");
                        if (json.fecha) {
                            $('#CuerpoMensaje').val(`Hola ${json.paciente.Nombre}! te envio este mail para realizar los primeros 15 dias\nTu proxima consulta será: ${json.fecha}`);
                        } else {
                            $('#CuerpoMensaje').val(`Hola ${json.paciente.Nombre}! te envio este mail para realizar los primeros 15 dias`);
                        }

                    });
            });


        var borrar = function (id) {
            console.log(archivos);
            archivos.splice(id, 1);
            document.getElementById(`row${id}`).remove();
            console.log(archivos);
        }

        //=======================JavaScriptPuro==========================
        console.log("");
        var prueba;
        var insertarImagen = function (src,name,id) {
            const btn = document.createElement("button");
            btn.className += "btn btn-default pull-right";
            btn.textContent = "x";
            btn.id = id;
           
            btn.onclick = function () {borrar(id);};
            const div = document.createElement("div");
            div.className += "row";
            div.id = "row"+id;
            const img = document.createElement("img");
            const label = document.createElement("label");
            label.textContent = name;
            console.log(name);
            img.style.width = "50px";
            img.style.height = "50px";
            img.style.margin = "5px";
            img.src = src;
            div.appendChild(img);
            div.appendChild(label);
            div.appendChild(btn);
            document.getElementById("imagen").appendChild(div);
        }

        function FileListItem(a) {
            a = [].slice.call(Array.isArray(a) ? a : arguments)
            for (var c, b = c = a.length, d = !0; b-- && d;) d = a[b] instanceof File
            if (!d) throw new TypeError("expected argument to FileList is File or array of File objects")
            for (b = (new ClipboardEvent("")).clipboardData || new DataTransfer; c--;) b.items.add(a[c])
            return b.files;
        }

     
        var enviar = function(e) {
            e.preventDefault();

            $("#Imagenes").prop('files',FileListItem(archivos));

            //document.getElementById("Imagenes").addEventListener("input",
            //    function () {
            //        this.value = archivos;
            //        //this.files.splice(0, this.files.length);
            //        //for (let i = 0; i < archivos.length; i++) {
            //        //    this.files.push(archivos[i]);
            //        //}
            //    });

            var data = new FormData(document.getElementById('formEnviarMail'));
            console.log(data);

            $.ajax({
                url: '@Url.Action("CreateParcial")',
                data: data,
                processData: false,
                contentType: false,
                type: 'POST',
                success: function(mensaje) {
                    $("#mensaje").text(mensaje);
                }
            });

        }

        

        $("#enviar").click(function(e) {
            enviar(e);
        });

        document.getElementById("Imagenes").addEventListener("input",
            function() {

                var files = this.files;

                for (var j = 0; j < files.length; j++) {
                    archivos.push(files[j]);
                }
                document.getElementById("imagen").innerHTML = "";
                for (let i = 0; i < archivos.length; i++) {
                  
                    var fileReader = new FileReader();
                    var file = archivos[i];
                    let name = file.name;
                    if (file.type.includes("image")) {
                        fileReader.onload = (function(e) {
                            insertarImagen(e.target.result,name,i);
                           
                        });
                    }
                    else if (file.type.includes("zip")) {
                        fileReader.onload = (function(e) {
                            insertarImagen("/Content/Imagenes/icono-ZIP.png",name,i);
                        });

                    }
                    else if (file.name.includes("rar")) {
                        fileReader.onload = (function(e) {
                            insertarImagen("/Content/Imagenes/rar.png",name,i);
                        });

                    }
                    else if (file.name.includes("doc") || file.name.includes(".txt") || file.name.includes("docx")) {
                        fileReader.onload = (function(e) {
                            insertarImagen("/Content/Imagenes/word.png",name,i);
                        });
                    }
                    else if (file.name.includes(".xlsx") || file.name.includes(".xlsm") || file.name.includes(".xltx") || file.name.includes(".xls")) {
                        fileReader.onload = (function (e) {
                            insertarImagen("/Content/Imagenes/Exel.png", name, i);
                        });
                    }
                    else {
                         fileReader.onload = (function (e) {
                            insertarImagen("/Content/Imagenes/archivo.png", name, i);
                        });
                    }
                    fileReader.readAsDataURL(archivos[i]);
                }
            });
    </script>
